
@model List<CarServPro.Razor.Models.CarDTO>

@{
    ViewData["Title"] = "Customer Cars";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<div class="container mt-5">
    <h2>@ViewBag.Name's Cars</h2>
    <button class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#addCarModal">
        Add New Car
    </button>@if (TempData["CarExists"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            @TempData["CarExists"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Registration</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var car in Model)
                {
                    <tr>
                        <td>@car.RegistrationNumber</td>
                        <td>
                            <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#addServiceModal"
                                data-car-id="@car.CarId">
                                Add Services
                            </button>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#viewServicesModal"
                                data-car-id="@car.CarId" data-car-reg="@car.RegistrationNumber">
                                View Services
                            </button>
                             <button type="button" class="btn btn-danger delete-car-btn"
                                data-car-id="@car.CarId">
                            Delete
                        </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info">No cars found for this customer</div>
    }
</div>

<div class="modal fade" id="addCarModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="AddNewCar" method="post">
                <input type="hidden" name="CustomerId" value="@ViewBag.CustomerId" />
                <div class="modal-header">
                    <h5 class="modal-title">Add New Car</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">RegistrationNumber</label>
                        <input name="RegistrationNumber" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="addServiceModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="AddServiceToCar" method="post">
                <input type="hidden" name="CarId" id="serviceCarId" />
                <div class="modal-header">
                    <h5 class="modal-title">Add Service</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Select Mechanic</label>
                        <select name="MechanicId" class="form-select" required>
                            <option value="">-- Select Mechanic --</option>
                            @foreach (var mechanic in ViewBag.Mechanics)
                            {
                                <option value="@mechanic.MechanicId">@mechanic.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Service Date</label>
                        <input type="date" name="ServiceDate" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save Service</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="viewServicesModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Services for <span id="carRegTitle"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Mechanic</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="servicesList">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<form id="antiForgeryForm" method="post">
    @Html.AntiForgeryToken()
</form>

<script>
    document.getElementById('viewServicesModal').addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var carId = button.getAttribute('data-car-id');
        var carReg = button.getAttribute('data-car-reg');

        console.log('=== DEBUG START ===');
        console.log('Button:', button);
        console.log('CarId from button:', carId);
        console.log('CarReg from button:', carReg);
        console.log('CarId type:', typeof carId);

        if (!carId || carId === 'null' || carId === 'undefined' || carId.trim() === '') {
            console.error('❌ Invalid carId detected');
            const tbody = document.getElementById('servicesList');
            tbody.innerHTML = "<tr><td colspan='3'>❌ Error: No car ID found</td></tr>";
            return;
        }

        document.getElementById('carRegTitle').textContent = carReg || 'Unknown Car';

        const tbody = document.getElementById('servicesList');
        tbody.innerHTML = "<tr><td colspan='3'>🔄 Loading...</td></tr>";

        const url = `/Home/GetServicesForCar?carId=${encodeURIComponent(carId)}`;
        console.log('📡 Fetching URL:', url);
        console.log('📡 Full URL:', window.location.origin + url);

        fetch(url, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            console.log('📡 Response received:');
            console.log('  - Status:', response.status);
            console.log('  - Status Text:', response.statusText);
            console.log('  - OK:', response.ok);
            console.log('  - Headers:', [...response.headers.entries()]);

            return response.text().then(text => {
                console.log('📡 Raw response text:', text);

                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}\nResponse: ${text}`);
                }

                try {
                    const jsonData = JSON.parse(text);
                    console.log('✅ Parsed JSON:', jsonData);
                    return jsonData;
                } catch (parseError) {
                    console.error('❌ JSON Parse Error:', parseError);
                    console.error('❌ Response was not valid JSON:', text);
                    throw new Error(`Invalid JSON response: ${parseError.message}`);
                }
            });
        })
        .then(services => {
            console.log('📊 Final services data:', services);
            console.log('📊 Services type:', typeof services);
            console.log('📊 Is array:', Array.isArray(services));

            if (Array.isArray(services)) {
                console.log('📊 Services count:', services.length);

                if (services.length === 0) {
                    tbody.innerHTML = "<tr><td colspan='3'>ℹ️ No services found for this car</td></tr>";
                    return;
                }

                tbody.innerHTML = "";

                services.forEach((service, index) => {
                    console.log(`📊 Processing service ${index + 1}:`, service);

                    const row = `
                        <tr data-service-id="${service.serviceId || 'unknown'}">
                            <td>${service.serviceDate ? new Date(service.serviceDate).toLocaleDateString() : 'N/A'}</td>
                            <td>${service.mechanicName || 'N/A'}</td>
                            <td>
                                <button type="button" class="btn btn-sm btn-danger delete-service-btn"
                                        data-service-id="${service.serviceId || ''}"
                                        onclick="deleteService(this.getAttribute('data-service-id'))">
                                    Delete
                                </button>
                            </td>
                        </tr>`;

                    tbody.innerHTML += row;
                });

                console.log('✅ Services rendered successfully');
            } else {
                console.error('❌ Services is not an array:', services);
                tbody.innerHTML = "<tr><td colspan='3'>❌ Unexpected response format</td></tr>";
            }
        })
        .catch(error => {
            console.error('❌ FETCH ERROR DETAILS:');
            console.error('  - Error type:', error.constructor.name);
            console.error('  - Error message:', error.message);
            console.error('  - Error stack:', error.stack);

            tbody.innerHTML = `<tr><td colspan='3'>❌ Error: ${error.message}</td></tr>`;
        })
        .finally(() => {
            console.log('=== DEBUG END ===');
        });
    });

</script>
<script>
    function deleteService(id) {
        if (confirm('Are you sure you want to delete this item?')) {
            fetch(`/Home/Delete/${id}`, {
                method: 'POST',
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to delete');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    }
</script>

<script>
    var addServiceModal = document.getElementById('addServiceModal');
    addServiceModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var carId = button.getAttribute('data-car-id');
        var inputCarId = addServiceModal.querySelector('#serviceCarId');
        inputCarId.value = carId;
    });

    
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        document.querySelectorAll('.delete-car-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const carId = this.getAttribute('data-car-id');

                if (confirm("Are you sure you want to delete this car?")) {
                    fetch(`/Home/DeleteCar/${carId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({})
                    })
                    .then(res => {
                        if (res.ok) {
                            location.reload();
                        } else {
                            alert("Failed to delete the car.");
                        }
                    })
                    .catch(err => {
                        console.error("Error:", err);
                        alert("An error occurred.");
                    });
                }
            });
        });
    });
</script>
